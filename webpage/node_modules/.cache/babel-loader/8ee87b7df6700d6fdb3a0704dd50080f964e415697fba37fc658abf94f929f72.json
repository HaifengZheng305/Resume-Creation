{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files (x86)\\\\Coding Projects\\\\Resume-Creation\\\\webpage\\\\src\\\\component\\\\sectionTemplate.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\n//This creates the section;\n//sectionName - the name of the section\n//sectionElement - the elements you want in cards of this section\n//updateResume\n//allowAddForm - Is this section allowed to add addition cards\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SectionTemplate(sectionName, sectionElement, updateResume, allowAddForm = false) {\n  _s();\n  const [objectId, setObjectId] = useState(0);\n\n  //setState - adds the card in to the state const array\n  const [state, setState] = useState([]);\n\n  // Run the effect only once, when addObject() is called.\n  useEffect(() => {\n    addObject();\n  }, []);\n\n  // Creates an empty card\n  //objectID - the ID of the current card\n  //\n  function createEmptyObject() {\n    const updatedSectionElement = sectionElement.map(element => ({\n      ...element,\n      input: null\n    }));\n    const stateObject = {\n      id: objectId,\n      readOnly: false,\n      sectionElement: updatedSectionElement\n    };\n    setObjectId(objectId + 1);\n    return stateObject;\n  }\n\n  //runs the creatEmptyObject function and addes it to the state array.\n  //updates the resumes object in homepage with this new card.\n  function addObject() {\n    setState([...state, createEmptyObject()]);\n    updateResume(state, sectionName);\n  }\n\n  //deletes the selected object\n  //filters the state with ojects other than the ID\n  //updates the resume object in the homepage with the state with the deleted card.\n  function deleteObject(e) {\n    const id = e.target.parentElement.id;\n    setState(state.filter(object => object.id != id));\n    updateResume(state, sectionName);\n  }\n\n  //updates the content of each card and update it to the resume object\n  function updateState(e) {\n    let value = e.target.value;\n    let categoryId = e.target.parentElement.parentElement.id;\n    let sectionId = parseInt(e.target.parentElement.parentElement.parentElement.parentElement.id);\n    setState(prevState => {\n      return prevState.map(section => {\n        if (section.id === sectionId) {\n          return {\n            ...section,\n            sectionElement: section.sectionElement.map(element => {\n              if (element.category === categoryId) {\n                return {\n                  ...element,\n                  input: value\n                };\n              }\n              return element;\n            })\n          };\n        }\n        return section;\n      });\n    });\n    updateResume(state, sectionName);\n  }\n  const listItems = state.map(section => /*#__PURE__*/_jsxDEV(\"li\", {\n    id: section.id,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: section.sectionElement.map(element => /*#__PURE__*/_jsxDEV(\"li\", {\n        id: element.category,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"categories\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"category_text\",\n            children: element.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: element.type,\n            readOnly: section.readOnly,\n            onChange: updateState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)\n      }, element.category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), allowAddForm && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Button\",\n      onClick: deleteObject,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, section.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"subtitle\",\n      children: sectionName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Input\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: listItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), allowAddForm && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Button\",\n        onClick: addObject,\n        children: \" Add \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n_s(SectionTemplate, \"yn9RPm1B9sNmTZ1mNettWgf8xic=\");\n_c = SectionTemplate;\nvar _c;\n$RefreshReg$(_c, \"SectionTemplate\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SectionTemplate","sectionName","sectionElement","updateResume","allowAddForm","_s","objectId","setObjectId","state","setState","addObject","createEmptyObject","updatedSectionElement","map","element","input","stateObject","id","readOnly","deleteObject","e","target","parentElement","filter","object","updateState","value","categoryId","sectionId","parseInt","prevState","section","category","listItems","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Program Files (x86)/Coding Projects/Resume-Creation/webpage/src/component/sectionTemplate.js"],"sourcesContent":["import React from 'react';\r\nimport  { useState, useEffect } from 'react'\r\n\r\n//This creates the section;\r\n//sectionName - the name of the section\r\n//sectionElement - the elements you want in cards of this section\r\n//updateResume\r\n//allowAddForm - Is this section allowed to add addition cards\r\n\r\nexport default function SectionTemplate(sectionName, sectionElement, updateResume, allowAddForm=false) {\r\n    const [objectId, setObjectId] = useState(0);\r\n\r\n    //setState - adds the card in to the state const array\r\n    const [state, setState] = useState([]);\r\n\r\n    // Run the effect only once, when addObject() is called.\r\n    useEffect(() => {\r\n        addObject();\r\n    }, []); \r\n\r\n    // Creates an empty card\r\n    //objectID - the ID of the current card\r\n    //\r\n    function createEmptyObject() {\r\n\r\n        const updatedSectionElement =  sectionElement.map((element) => ({...element, input: null}))\r\n\r\n        const stateObject = { id: objectId, readOnly: false, sectionElement:updatedSectionElement };\r\n\r\n        setObjectId(objectId + 1);\r\n\r\n        return stateObject;\r\n    }\r\n\r\n    //runs the creatEmptyObject function and addes it to the state array.\r\n    //updates the resumes object in homepage with this new card.\r\n    function addObject() {\r\n        setState([...state, createEmptyObject()]);\r\n        updateResume(state, sectionName);\r\n    }\r\n\r\n    //deletes the selected object\r\n    //filters the state with ojects other than the ID\r\n    //updates the resume object in the homepage with the state with the deleted card.\r\n    function deleteObject(e) {\r\n        const id = e.target.parentElement.id;\r\n        setState(state.filter( object => object.id!=id));\r\n        updateResume(state, sectionName);\r\n    }\r\n\r\n\r\n    //updates the content of each card and update it to the resume object\r\n    function updateState(e) {\r\n        let value = e.target.value;\r\n        let categoryId = e.target.parentElement.parentElement.id;\r\n        let sectionId = parseInt(e.target.parentElement.parentElement.parentElement.parentElement.id);\r\n\r\n        setState((prevState) => {\r\n            return prevState.map((section) => {\r\n            if (section.id === sectionId) {\r\n                return {\r\n                ...section,\r\n                sectionElement: section.sectionElement.map((element) => {\r\n                    if (element.category === categoryId) {\r\n                    return {\r\n                        ...element,\r\n                        input: value\r\n                    };\r\n                    }\r\n                    return element;\r\n                })\r\n                };\r\n            }\r\n            return section;\r\n            });\r\n        });\r\n\r\n        updateResume(state, sectionName);\r\n    }\r\n\r\n\r\n    const listItems = state.map((section) => (\r\n        <li key={section.id} id={section.id}>\r\n            <ul>\r\n            {section.sectionElement.map((element) => (\r\n                <li id= {element.category} key={element.category}>\r\n                <label className=\"categories\">\r\n                    <p className=\"category_text\">{element.category}</p>\r\n                    <input type={element.type} readOnly={section.readOnly} onChange={updateState}/>\r\n                </label>\r\n                </li>\r\n            ))}\r\n            </ul>\r\n            {allowAddForm && (\r\n            <button className=\"Button\" onClick={deleteObject}>\r\n                Delete\r\n            </button>\r\n            )}\r\n        </li>\r\n    ));\r\n\r\n    \r\n    return (\r\n        <div className='section'>\r\n            <h1 className = 'subtitle'>{sectionName}</h1>\r\n            <div className=\"Input\">\r\n                <ul>{listItems}</ul>\r\n                {allowAddForm && (\r\n                    <button className=\"Button\" onClick={addObject}> Add </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}